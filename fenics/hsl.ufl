


element = FiniteElement("Lagrange", triangle, 1)

v       = TestFunction(element)  # Test Function
u       = TrialFunction(element) # Trial Function

u0 = Coefficient(element)
# g = Coefficient(element)

# D1 = Coefficient(element)
# D2 = Coefficient(element)
D   = Constant(triangle)
dt  = Constant(triangle)
f   = Constant(triangle)

# A = as_matrix([[D*D1,D*D2],[D*D2,D*D1]])
A=D

# F = u*v*dx + dt*dot(grad(u), grad(v))*dx - (u0 + dt*f)*v*dx

# No g function:
F = (u-u0)*v*dx - dt*f*v*dx + dt*dot(A*grad(u), grad(v))*dx 
# F = (u-u0)*v*dx - dt*f*v*dx + dt*dot(D*grad(u), grad(v))*dx 
 
# F = (u-u0)*v*dx - dt*(f*v*dx + g*v*ds) + dt*D*dot(grad(u), grad(v))*dx 


a, L = lhs(F), rhs(F)


